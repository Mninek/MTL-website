{"version":3,"sources":["components/Button/Button.jsx","audio/dealwithit.mp3","audio/PlayBackGroundMusic.js","components/navBar/navBar.js","components/images/MTLLogo.js","components/home/homePage.js","components/draft/Draft.js","components/randomRoll/RandomRoll.js","components/random/Random.js","App.js","reportWebVitals.js","components/customCursor/emojiCursor.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","PlayBackGroundMusic","handleSongLoading","handleSongPlaying","handleSongFinishedPlaying","useState","isPlaying","setIsPlaying","url","terransong","volume","loop","playStatus","Sound","status","PLAYING","playFromPosition","onLoading","onPlaying","onFinishedPlaying","MenuItems","title","cName","NavBar","state","clicked","handleClick","setState","to","map","item","index","href","Component","MTLLogo","src","window","location","origin","alt","homePage","Draft","RandomRoll","props","updateUnits","console","log","process","MTL_API","fetch","then","response","json","data","unitJson","protossUnit","zergUnit","terranUnit","this","React","Random","error","setError","nGames","setnGames","apiCall","setapiCall","numGames","setNumGames","teamOne","setTeamOne","teamTwo","setTeamTwo","names","setNames","races","setRaces","fourGamers","setFourGamers","nGamers","setnGamers","noRoomcodeError","setNoRoomcodeError","joinError","setJoinError","roomCode","setRoomCode","selectError","setSelectError","transfer","setTransfer","raceOptions","value","label","tempTeamOne","tempTeamTwo","updateChange","place","tempRaces","pos","setName","name","tempNames","placeholder","onChange","event","code","target","length","options","components","DropdownIndicator","IndicatorSeperator","val","result","i","charAt","Math","floor","random","defaultValue","total","e","requestOptions","method","headers","body","JSON","stringify","push","p0","concat","toString","p1","p2","p3","p4","p5","p6","p7","App","onMouseMove","handleMouseMove","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","canvas","context","possibleEmoji","emoji","hasWrapperEl","element","document","width","innerWidth","height","innerHeight","cursor","x","y","lastPos","lastTimestamp","particles","canvImages","onWindowResize","clientWidth","clientHeight","onTouchMove","touches","addParticle","clientX","clientY","timeStamp","requestAnimationFrame","boundingRect","getBoundingClientRect","left","top","hypot","img","Particle","clearRect","update","lifeSpan","splice","updateParticles","canvasItem","initialLifeSpan","velocity","position","canv","scale","max","drawImage","createElement","getContext","style","pointerEvents","appendChild","font","textBaseline","textAlign","forEach","measurements","measureText","bgCanvas","bgContext","actualBoundingBoxAscent","fillText","addEventListener","passive","emojiCursor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed37ef04.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Button.css\";\r\n\r\nconst STYLES = [\r\n    \"btn--primary--solid\",\r\n    \"btn--roll--solid\",\r\n    \"btn--danger--solid\",\r\n    \"btn--success--solid\"\r\n]\r\n\r\nconst SIZES = [\r\n    \"btn--small\",\r\n    \"btn--medium\",\r\n    \"btn--large\"\r\n]\r\n\r\nexport const Button = ({\r\n    children, \r\n    type, \r\n    onClick,\r\n    buttonStyle, \r\n    buttonSize\r\n}) => {\r\n\r\n    //check if buttonstyle exists otherwise default to primary\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n    //check if buttonSize exists otherwise default to medium\r\n    const checkButtonSize = STYLES.includes(buttonSize) ? buttonSize : SIZES[1];\r\n    return (\r\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n            onClick={onClick} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/dealwithit.9c0f19a0.mp3\";","import React, {useState} from 'react';\r\nimport Sound from 'react-sound';\r\nimport terransong from './dealwithit.mp3';\r\n\r\nexport const PlayBackGroundMusic = (\r\n    handleSongLoading,\r\n    handleSongPlaying,\r\n    handleSongFinishedPlaying\r\n) => {\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() =>setIsPlaying(!isPlaying)} >{!isPlaying ?'Play' : 'Stop'}</button>\r\n            <Sound \r\n                url={terransong}\r\n                volume={8}\r\n                loop={true}\r\n                playStatus={\r\n                    //isPlaying ? Sound.status.PLAYING : Sound.status.STOPPED\r\n                    Sound.status.PLAYING\r\n                }\r\n                playFromPosition={100}\r\n                onLoading={handleSongLoading}\r\n                onPlaying={handleSongPlaying}\r\n                onFinishedPlaying={handleSongFinishedPlaying}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PlayBackGroundMusic;","import React, {Component} from 'react';\r\nimport {Button} from '../Button/Button'\r\nimport {Link} from 'react-router-dom';\r\nimport {PlayBackGroundMusic} from '../../audio/PlayBackGroundMusic';\r\n\r\nimport './navBar.css'\r\n\r\nconst MenuItems = [\r\n    {\r\n        title: 'Draft',\r\n        url: '/draft',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Random Teams',\r\n        url: '/randomHelper',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Random Unit',\r\n        url: '/randomRoll',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Unit Stats',\r\n        url: '#',\r\n        cName: 'nav-links'\r\n    },\r\n]\r\n\r\nclass NavBar extends Component {\r\n    state = {clicked: false}\r\n\r\n    handleClick = () => {\r\n        this.setState({clicked: !this.state.clicked})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"Navbar\">\r\n                <Link to='/' className=\"menu-icon\">\r\n                    MTLGGEZL\r\n                </Link>\r\n                <ul className ='nav-menu'>\r\n                    {MenuItems.map((item, index) => {\r\n                        return (\r\n                            <li key = {index}>\r\n                                <a className={item.cName} href={item.url} >\r\n                                    {item.title}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './MTLLogo.css'\r\n\r\nfunction MTLLogo() {\r\n    return (\r\n         <img src = {window.location.origin + '/images/MTLGGE_2.jpg'}alt='MTLGGEZ Logo' />\r\n    );\r\n}\r\n\r\nexport default MTLLogo;","import React from 'react';\r\nimport './homePage.css'\r\nimport MTLLogo from '../images/MTLLogo'\r\nimport {Button} from '../Button/Button'\r\n\r\nfunction homePage() {\r\n\r\n    const routeDraft = () => {\r\n        window.location.href = '/draft';\r\n    }\r\n\r\n    const routeRandomRoll = () => {\r\n        window.location.href = '/randomRoll'\r\n    }\r\n\r\n    const routeRandom = () => {\r\n        window.location.href ='/randomHelper'\r\n    }\r\n\r\n    return (\r\n        <div className=\"homePage\">\r\n        <MTLLogo />\r\n            <div className=\"container\">\r\n                <div className=\"draft\" onClick={routeDraft}>\r\n                    <Button>\r\n                        Draft Pick\r\n                    </Button>\r\n                </div>\r\n                <div className=\"randomizer\" onClick={routeRandom}>\r\n                    <Button>\r\n                        Random Team Rolls\r\n                    </Button>\r\n                </div>\r\n                <div className=\"randomRoll\" onClick={routeRandomRoll}>\r\n                    <Button>\r\n                        Random Unit\r\n                    </Button>\r\n                </div>\r\n                <div className = \"stats\">\r\n                    <Button>\r\n                        Unit Statistics\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default homePage;","import React from 'react';\r\nimport Select from 'react-select';\r\nimport './Draft.css'\r\n\r\nfunction Draft() {\r\n    return (\r\n        <div className=\"DraftPage\">\r\n            Sorry no draft picking ninek too lazy :(\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Draft;","import React from 'react';\r\nimport './RandomRoll.css'\r\nimport {Button} from '../Button/Button'\r\n\r\nclass RandomRoll extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unitJson: [\r\n                {\r\n                    protossUnit: \"placeholder\",\r\n                    zergUnit:\"placeholder\",\r\n                    terranUnit:\"placeholder\"\r\n                }\r\n            ]\r\n        }\r\n        this.updateUnits();\r\n    }\r\n\r\n    updateUnits = () => {\r\n        console.log(process.env.MTL_API+'api/randomRoll')\r\n        fetch(process.env.MTL_API+'api/randomRoll')\r\n        .then((response)=>response.json())\r\n        .then((data)=>{\r\n            this.setState({unitJson: data});\r\n            console.log(this.unitJson);\r\n        });\r\n    }\r\n    render () {\r\n        return(\r\n            <div className=\"randomUnitGen\">\r\n                Monobattle Random Unit Generator\r\n                <div className=\"RGU\">\r\n                    <h1 className=\"pUnit\">{this.state.unitJson.protossUnit}</h1>\r\n                    <h2 className=\"tUnit\">{this.state.unitJson.zergUnit}</h2>\r\n                    <h3 className=\"zUnit\">{this.state.unitJson.terranUnit}</h3>\r\n                </div>\r\n                <Button onClick={this.updateUnits} type=\"btn--roll--solid\">\r\n                    Roll Units\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomRoll;","import React, {useState} from 'react';\r\nimport Select from 'react-select';\r\nimport './Random.css'\r\nimport {Button} from '../Button/Button'\r\nimport { render } from 'react-dom';\r\n\r\n\r\nfunction Random() {\r\n\r\n    const [error, setError] = useState(false);\r\n    const [nGames, setnGames] = useState(false);\r\n    const [apiCall, setapiCall] = useState(false);\r\n    const [numGames, setNumGames] = useState(0);\r\n    const [teamOne, setTeamOne] = useState([]);\r\n    const [teamTwo, setTeamTwo] = useState([]);\r\n    const [names, setNames] = useState(['0','1','2','3','4','5','6','7']);\r\n    const [races, setRaces] = useState(['N','N','N','N','N','N','N','N']);\r\n    const [fourGamers, setFourGamers] = useState(true);\r\n    const [nGamers, setnGamers] = useState(false);\r\n    const [noRoomcodeError, setNoRoomcodeError] = useState(true);\r\n    const [joinError, setJoinError] = useState(false);\r\n    const [roomCode, setRoomCode] = useState('test');\r\n    const [selectError, setSelectError] = useState(false);\r\n    const [transfer, setTransfer] = useState(true);\r\n\r\n    const updateGamers = (e) => {\r\n        if (e.value == 3){\r\n            setFourGamers(false);\r\n        } else {\r\n            setFourGamers(true);\r\n        }\r\n        setnGamers(true);\r\n    }\r\n    const playerNumOptions = [\r\n        //{value: \"3\", label: \"3\"}, only 4 allowed for now\r\n        {value: \"4\", label: \"4\"}\r\n    ];\r\n    \r\n    const setCode = (code) => {\r\n        var tempCode = code;\r\n        setRoomCode(tempCode);\r\n        if (code.length == 6){\r\n            //make sure that this is a valid roomCode\r\n            setNoRoomcodeError(false);\r\n        } else {\r\n            setNoRoomcodeError(true);\r\n        }\r\n    }\r\n\r\n    const joinRoom = () => {\r\n        if (noRoomcodeError){\r\n            setJoinError(true)\r\n        } else{\r\n            //socket.emit('joinRoom', roomCode);\r\n        }\r\n    }\r\n\r\n    const createRoom = () => {\r\n        if (nGamers){\r\n            //generate a room code, and then pass the number of gamers and room code to Random class\r\n            var result = '';\r\n            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n            var charactersLength = 62; //manuually counted characters LOL\r\n            for (var i = 0; i < 6; i++){\r\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n            }\r\n            setRoomCode(result);\r\n            //socket.emit('createRoom', result);\r\n            setTransfer(false);\r\n        } else {\r\n            setSelectError(true);\r\n        }\r\n    }\r\n\r\n\r\n    const raceOptions = [\r\n        {value: 'P', label: 'P'},\r\n        {value: 'T', label: 'T'},\r\n        {value: 'Z', label: 'Z'},\r\n        {value: 'R', label: 'R'}\r\n    ];\r\n\r\n    const games = [\r\n        {value: '1', label: '1'},\r\n        {value: '2', label: '2'},\r\n        {value: '3', label: '3'},\r\n        {value: '4', label: '4'},\r\n        {value: '5', label: '5'},\r\n        {value: '6', label: '6'},\r\n        {value: '7', label: '7'},\r\n        {value: '8', label: '8'},\r\n        {value: '9', label: '9'},\r\n        {value: '10', label: '10'},\r\n    ]\r\n\r\n    var racesTest = ['R','R','Z','Z','T','T','P','P'];\r\n\r\n    var tempTeamOne = [];\r\n\r\n    var tempTeamTwo = [];\r\n\r\n    const updateChange = (place) => {\r\n        var tempRaces = races;\r\n        tempRaces[place.pos] = place.value;\r\n        setRaces(tempRaces);\r\n    }\r\n\r\n    const updateGames = (e) => {\r\n        setNumGames(e.value);\r\n        console.log(numGames);\r\n        setnGames(true);\r\n    }\r\n\r\n    const setName = (name, index) => {\r\n        var tempNames = names;\r\n        tempNames[index] = name;\r\n        setNames(tempNames);\r\n        //socket.emit('setNameSignal', tempNames,)\r\n    }\r\n\r\n    const rollForTeams = () => {\r\n        if (races.includes('N') || nGames == false){\r\n            setError(true);\r\n            console.log(races);\r\n        } else {\r\n            setError(false);\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    races: JSON.stringify(races),\r\n                    names: JSON.stringify(names),\r\n                    numGames: JSON.stringify(numGames)\r\n                })\r\n            }\r\n            fetch(process.env.MTL_API+'api/teamsRandomRoll/', requestOptions)\r\n            .then((response)=>response.json())\r\n            .then((data)=>{\r\n                tempTeamOne = []\r\n                tempTeamTwo = []\r\n                //tempTeamOne.push([data.p0.name, data.p1.name, data.p2.name, data.p3.name])\r\n                //teamTwo.push([data.p4.name, data.p5.name, data.p6.name, data.p7.name])\r\n                for(var i = 0; i < numGames; i++){\r\n                    tempTeamOne.push([data.p0[\"unit\".concat(i.toString())], data.p1[\"unit\".concat(i.toString())], data.p2[\"unit\".concat(i.toString())], data.p3[\"unit\".concat(i.toString())]]);\r\n                    tempTeamTwo.push([data.p4[\"unit\".concat(i.toString())], data.p5[\"unit\".concat(i.toString())], data.p6[\"unit\".concat(i.toString())], data.p7[\"unit\".concat(i.toString())]]);\r\n                }\r\n                setapiCall(true);\r\n                setTeamOne(tempTeamOne);\r\n                setTeamTwo(tempTeamTwo);\r\n                //socket.emit('rollForTeams', {'apiCall': true, 'teamOne': tempTeamOne, 'teamTwo' : tempTeamTwo, 'names' : names, 'roomCode' : roomCode});\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n    const generateRoomCode = () => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = caracters.length;\r\n        for (var i = 0; i < length; i++){\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        setRoomCode(result);\r\n    }\r\n    */\r\n\r\n    function sleep(ms) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(resolve, ms);\r\n        });\r\n    }\r\n\r\n    function handleJoinRoomSignal(val){\r\n        console.log(val);\r\n        if(val){\r\n            setTransfer(false);\r\n            sleep(1);\r\n            setJoinError(false);\r\n        } else {\r\n            setJoinError(true);\r\n        }\r\n    }\r\n\r\n    function handleSetTeams(args){\r\n        setapiCall(args['apiCall']);\r\n        setTeamOne(args['teamOne']);\r\n        setTeamTwo(args['teamTwo']);\r\n        setNames(args['names'])\r\n        console.log(\"apiCall below\");\r\n        console.log(apiCall);\r\n    }\r\n\r\n    return (\r\n        transfer ? <div className=\"container\">\r\n            <div className=\"top\">\r\n                <input type=\"text\" placeholder=\"RoomCode\" className=\"inputBoxCode\" onChange={event => setCode(event.target.value)}/>\r\n                <Button onClick={joinRoom}>\r\n                    Join a room\r\n                </Button>\r\n                {joinError &&\r\n                    <p className=\"errorMessage\">\r\n                        Please enter a valid room code\r\n                    </p>\r\n                }\r\n            </div>\r\n            <div className=\"bottom\">\r\n                <p className=\"text\">\r\n                    Enter your opponents room code above, or select the number of gamers per team and create a new room below\r\n                </p>\r\n                <Select className=\"selectButtonGamers\"\r\n                    options = {playerNumOptions} \r\n                    components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                    onChange={(val)=> {updateGamers({value: val.value})}}\r\n                />\r\n                <Button onClick={createRoom}>\r\n                    Create room\r\n                </Button>\r\n                {selectError &&\r\n                    <p className=\"errorMessage\">\r\n                        Please select number of gamers per team\r\n                    </p>\r\n                }\r\n            </div>\r\n        </div> :\r\n        fourGamers ?\r\n            <div className=\"container\">\r\n                <div className=\"roomCodeDiv\">Roomcode: {roomCode}</div>\r\n                <div className=\"team1\">\r\n                    Team 1\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder=\"Player 1\" className=\"inputBox\" onChange={event => setName(event.target.value, 0)}/>\r\n                        <Select className=\"selectButton\"\r\n                            options = {raceOptions} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Race\", value: 0}}\r\n                            onChange={(val)=> {updateChange({pos: 0, value: val.value, total: 8})}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder=\"Player 2\" className=\"inputBox\" onChange={event => setName(event.target.value, 1)}/>\r\n                        <Select className=\"selectButton\"\r\n                            options = {raceOptions} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Race\", value: 0}}\r\n                            onChange={(val)=> {updateChange({pos: 1, value: val.value, total: 8})}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder=\"Player 3\" className=\"inputBox\" onChange={event => setName(event.target.value, 2)}/>\r\n                        <Select className=\"selectButton\"\r\n                            options = {raceOptions} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Race\", value: 0}}\r\n                            onChange={(val)=> {updateChange({pos: 2, value: val.value, total: 8})}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder=\"Player 4\" className=\"inputBox\" onChange={event => setName(event.target.value, 3)}/>\r\n                        <Select className=\"selectButton\"\r\n                            options = {raceOptions} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Race\", value: 0}}\r\n                            onChange={(val)=> {updateChange({pos: 3, value: val.value, total: 8})}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"team2\">\r\n                    Team 2\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder=\"Player 1\" className=\"inputBox\" onChange={event => setName(event.target.value, 4)}/>\r\n                        <Select className=\"selectButton\"\r\n                            options = {raceOptions} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Race\", value: 0}}\r\n                            onChange={(val)=> {updateChange({pos: 4, value: val.value, total: 8})}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder=\"Player 2\" className=\"inputBox\" onChange={event => setName(event.target.value, 5)}/>\r\n                        <Select className=\"selectButton\"\r\n                            options = {raceOptions} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Race\", value: 0}}\r\n                            onChange={(val)=> {updateChange({pos: 5, value: val.value, total: 8})}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder=\"Player 3\" className=\"inputBox\" onChange={event => setName(event.target.value, 6)}/>\r\n                        <Select className=\"selectButton\"\r\n                            options = {raceOptions} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Race\", value: 0}}\r\n                            onChange={(val)=> {updateChange({pos: 6, value: val.value, total: 8})}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input type=\"text\" placeholder=\"Player 4\" className=\"inputBox\" onChange={event => setName(event.target.value, 7)}/>\r\n                        <Select className=\"selectButton\"\r\n                            options = {raceOptions} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Race\", value: 0}}\r\n                            onChange={(val)=> {updateChange({pos: 7, value: val.value, total: 8})}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"textAndButton\">\r\n                    <Select className=\"numGames\"\r\n                            options = {games} \r\n                            components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                            defaultValue={{label: \"Number of games\", value: 0}}\r\n                            onChange={(val)=> {updateGames({value: val.value})}}\r\n                        />                    \r\n                    <p className=\"bottomText\">\r\n                        Fill in the names and races of your players, then when both captains are ready press the button below.\r\n                    </p>\r\n                    <Button onClick={rollForTeams}>\r\n                        Press me ( ͡❛ ͜ʖ ͡❛)\r\n                    </Button>\r\n                    {error &&\r\n                        <p className=\"errorMessage\">\r\n                            Please select a race and number of games to roll for\r\n                        </p>\r\n                    }\r\n                </div>\r\n                {apiCall &&\r\n                    <div className=\"parent\">\r\n                        <table className=\"unitTableOuter\">\r\n                            Team One's Units\r\n                            <tbody>\r\n                                <tr className=\"unitTable\">\r\n                                    <th className=\"unitTableEntry\">{names[0]}</th>\r\n                                    <th className=\"unitTableEntry\">{names[1]}</th>\r\n                                    <th className=\"unitTableEntry\">{names[2]}</th>\r\n                                    <th className=\"unitTableEntry\">{names[3]}</th>\r\n                                </tr>\r\n                                {teamOne.map((item, index) => {\r\n                                    return(\r\n                                    <tr key={index} className=\"unitTable\">\r\n                                        <td className=\"unitTableEntry\">{item[0]}</td>\r\n                                        <td className=\"unitTableEntry\">{item[1]}</td>\r\n                                        <td className=\"unitTableEntry\">{item[2]}</td>\r\n                                        <td className=\"unitTableEntry\">{item[3]}</td>\r\n                                    </tr>)\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        <table className=\"unitTableOuter\">\r\n                            Team Two's Units\r\n                            <tbody>\r\n                                <tr className=\"unitTable\">\r\n                                    <th className=\"unitTableEntry\">{names[4]}</th>\r\n                                    <th className=\"unitTableEntry\">{names[5]}</th>\r\n                                    <th className=\"unitTableEntry\">{names[6]}</th>\r\n                                    <th className=\"unitTableEntry\">{names[7]}</th>\r\n                                </tr>\r\n                                {teamTwo.map((item, index) => {\r\n                                    return(\r\n                                    <tr key={index} className=\"unitTable\">\r\n                                        <td className=\"unitTableEntry\">{item[0]}</td>\r\n                                        <td className=\"unitTableEntry\">{item[1]}</td>\r\n                                        <td className=\"unitTableEntry\">{item[2]}</td>\r\n                                        <td className=\"unitTableEntry\">{item[3]}</td>\r\n                                    </tr>)\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            </div>\r\n        :\r\n            <div className=\"container\">\r\n                placeholder draft\r\n                <Select className=\"selectButton\"\r\n                    options = {raceOptions} \r\n                    components = {{ DropdownIndicator: () => null, IndicatorSeperator:() => null}}\r\n                />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Random;","import './App.css';\r\nimport './components/navBar/navBar'\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n//pages\r\nimport homePage from './components/home/homePage'\r\nimport Draft from './components/draft/Draft'\r\nimport NavBar from './components/navBar/navBar'\r\nimport RandomRoll from './components/randomRoll/RandomRoll'\r\nimport Random from './components/random/Random'\r\nimport {PlayBackGroundMusic} from './audio/PlayBackGroundMusic'\r\n\r\n\r\nfunction App() {\r\n\r\n  //so that socket can be accessed anywhere\r\n  \r\n\r\n  return (\r\n    \r\n    <Router>\r\n      <div className='test' onMouseMove={e => this.handleMouseMove(e)}></div>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route path='/' exact component={homePage} />\r\n        <Route path='/draft' exact component={Draft}/>\r\n        <Route path='/randomHelper' exact component={Random}/>\r\n        <Route path='/randomRoll' exact component={RandomRoll}/>\r\n        <Route path='/random' exact component={Random}/>\r\n      </Switch>\r\n      <PlayBackGroundMusic />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","function emojiCursor(options) {\r\n  const possibleEmoji = (options && options.emoji) || [\"💩\", \"💋\", \"👬\", \"👬🏻\", \"🍆\", \"🤬\", \"🥵\"]\r\n  let hasWrapperEl = options && options.element\r\n  let element = hasWrapperEl || document.body\r\n\r\n  let width = window.innerWidth\r\n  let height = window.innerHeight\r\n  const cursor = { x: width / 2, y: width / 2 }\r\n  const lastPos = { x: width / 2, y: width / 2 }\r\n  let lastTimestamp = 0\r\n  const particles = []\r\n  const canvImages = []\r\n  let canvas, context\r\n\r\n  function init() {\r\n    canvas = document.createElement(\"canvas\")\r\n    context = canvas.getContext(\"2d\")\r\n\r\n    canvas.style.top = \"0px\"\r\n    canvas.style.left = \"0px\"\r\n    canvas.style.pointerEvents = \"none\"\r\n\r\n    if (hasWrapperEl) {\r\n      canvas.style.position = \"absolute\"\r\n      element.appendChild(canvas)\r\n      canvas.width = element.clientWidth\r\n      canvas.height = element.clientHeight\r\n    } else {\r\n      canvas.style.position = \"fixed\"\r\n      document.body.appendChild(canvas)\r\n      canvas.width = width\r\n      canvas.height = height\r\n    }\r\n\r\n    context.font = \"21px serif\"\r\n    context.textBaseline = \"middle\"\r\n    context.textAlign = \"center\"\r\n\r\n    possibleEmoji.forEach((emoji) => {\r\n      let measurements = context.measureText(emoji)\r\n      let bgCanvas = document.createElement(\"canvas\")\r\n      let bgContext = bgCanvas.getContext(\"2d\")\r\n\r\n      bgCanvas.width = measurements.width\r\n      bgCanvas.height = measurements.actualBoundingBoxAscent * 2\r\n\r\n      bgContext.textAlign = \"center\"\r\n      bgContext.font = \"21px serif\"\r\n      bgContext.textBaseline = \"middle\"\r\n      bgContext.fillText(\r\n        emoji,\r\n        bgCanvas.width / 2,\r\n        measurements.actualBoundingBoxAscent\r\n      )\r\n\r\n      canvImages.push(bgCanvas)\r\n    })\r\n\r\n    bindEvents()\r\n    loop()\r\n  }\r\n\r\n  // Bind events that are needed\r\n  function bindEvents() {\r\n    element.addEventListener(\"mousemove\", onMouseMove, { passive: true })\r\n    element.addEventListener(\"touchmove\", onTouchMove, { passive: true })\r\n    element.addEventListener(\"touchstart\", onTouchMove, { passive: true })\r\n    window.addEventListener(\"resize\", onWindowResize)\r\n  }\r\n\r\n  function onWindowResize(e) {\r\n    width = window.innerWidth\r\n    height = window.innerHeight\r\n\r\n    if (hasWrapperEl) {\r\n      canvas.width = element.clientWidth\r\n      canvas.height = element.clientHeight\r\n    } else {\r\n      canvas.width = width\r\n      canvas.height = height\r\n    }\r\n  }\r\n\r\n  function onTouchMove(e) {\r\n    if (e.touches.length > 0) {\r\n      for (let i = 0; i < e.touches.length; i++) {\r\n        addParticle(\r\n          e.touches[i].clientX,\r\n          e.touches[i].clientY,\r\n          canvImages[Math.floor(Math.random() * canvImages.length)]\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  function onMouseMove(e) {\r\n    // Dont run too fast\r\n    if (e.timeStamp - lastTimestamp < 16) {\r\n      return\r\n    }\r\n\r\n    window.requestAnimationFrame(() => {\r\n      if (hasWrapperEl) {\r\n        const boundingRect = element.getBoundingClientRect()\r\n        cursor.x = e.clientX - boundingRect.left\r\n        cursor.y = e.clientY - boundingRect.top\r\n      } else {\r\n        cursor.x = e.clientX\r\n        cursor.y = e.clientY\r\n      }\r\n\r\n      const distBetweenPoints = Math.hypot(\r\n        cursor.x - lastPos.x,\r\n        cursor.y - lastPos.y\r\n      )\r\n\r\n      if (distBetweenPoints > 1) {\r\n        addParticle(\r\n          cursor.x,\r\n          cursor.y,\r\n          canvImages[Math.floor(Math.random() * possibleEmoji.length)]\r\n        )\r\n\r\n        lastPos.x = cursor.x\r\n        lastPos.y = cursor.y\r\n        lastTimestamp = e.timeStamp\r\n      }\r\n    })\r\n  }\r\n\r\n  function addParticle(x, y, img) {\r\n    particles.push(new Particle(x, y, img))\r\n  }\r\n\r\n  function updateParticles() {\r\n    context.clearRect(0, 0, width, height)\r\n\r\n    // Update\r\n    for (let i = 0; i < particles.length; i++) {\r\n      particles[i].update(context)\r\n    }\r\n\r\n    // Remove dead particles\r\n    for (let i = particles.length - 1; i >= 0; i--) {\r\n      if (particles[i].lifeSpan < 0) {\r\n        particles.splice(i, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  function loop() {\r\n    updateParticles()\r\n    requestAnimationFrame(loop)\r\n  }\r\n\r\n  /**\r\n   * Particles\r\n   */\r\n\r\n  function Particle(x, y, canvasItem) {\r\n    const lifeSpan = Math.floor(Math.random() * 60 + 80)\r\n    this.initialLifeSpan = lifeSpan //\r\n    this.lifeSpan = lifeSpan //ms\r\n    this.velocity = {\r\n      x: (Math.random() < 0.5 ? -1 : 1) * (Math.random() / 2),\r\n      y: Math.random() * 0.4 + 0.8,\r\n    }\r\n    this.position = { x: x, y: y }\r\n    this.canv = canvasItem\r\n\r\n    this.update = function(context) {\r\n      this.position.x += this.velocity.x\r\n      this.position.y += this.velocity.y\r\n      this.lifeSpan--\r\n\r\n      this.velocity.y += 0.05\r\n\r\n      const scale = Math.max(this.lifeSpan / this.initialLifeSpan, 0)\r\n\r\n      context.drawImage(\r\n        this.canv,\r\n        this.position.x - (this.canv.width / 2) * scale,\r\n        this.position.y - this.canv.height / 2,\r\n        this.canv.width * scale,\r\n        this.canv.height * scale\r\n      )\r\n    }\r\n  }\r\n\r\n  init()\r\n}\r\n\r\nexport default emojiCursor;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport emojiCursor from './components/customCursor/emojiCursor';\r\n\r\nemojiCursor()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}